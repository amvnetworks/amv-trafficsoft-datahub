description = 'Please provide a meaningful description..'

buildscript {
    repositories {
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
}

dependencies {
    compile project(':amv-trafficsoft-datahub-xfcd-spring-boot-starter')
    compile project(':amv-vertx-spring-boot-starter')

    compile "io.vertx:vertx-dropwizard-metrics:${vertxVersion}"
    compile "io.vertx:vertx-maven-service-factory:${vertxVersion}"
    compile "io.vertx:vertx-health-check:${vertxVersion}"

    compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-json'
    }
    compile("org.springframework.boot:spring-boot-starter-json:${springBootVersion}") {
        // kotlin produces a NoClassDefFoundError at the moment (16.08.17)
        exclude group: 'com.fasterxml.jackson.module', module: 'jackson-module-kotlin'
    }
    //compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
}

bootJar {
    mainClass = 'org.amv.trafficsoft.datahub.TrafficsoftDataHubApplication'
    launchScript {
        included = true
    }
}

bootRun {
    //enables commandline args for bootRun
    systemProperties = project.gradle.startParameter.systemPropertiesArgs
}

